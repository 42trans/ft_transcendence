version: "3.7"
# docker/srcs/docker-compose-web.yml
services:
  nginx:
    container_name: nginx
    build: ./nginx
    image: nginx
    env_file:
      - .env
    ports:
      - "${NGINX_SSL_PORT}:443"
      - "${NGINX_PORT}:8085"
    environment:
      - SERVER_NAME=${SERVER_NAME}
    volumes:
      - ${VOLUME_PATH}/nginx/static:/static
      - ${SSL_CERT_PATH}:/etc/nginx/ssl/nginx.crt
      - ${SSL_KEY_PATH}:/etc/nginx/ssl/nginx.key
      - ${VOLUME_PATH}:/container_output
      - ${VOLUME_PATH}/log_vol:/var/log/nginx
    networks:
      - web_transcendence
      # - monitor_transcendence
    restart: unless-stopped
    depends_on:
      - pgadmin
      - uwsgi-django
      # - ft_django
    init: true

  frontend:
    container_name: frontend
    build: ./frontend
    image: frontend
    env_file:
      - .env
    networks:
      - web_transcendence
      # - monitor_transcendence
    ports:
      - "${FRONTEND_PORT}:3000"
      - "3090:3001"
    restart: unless-stopped
    init: true

  uwsgi-django:
    container_name: uwsgi-django
    build: ./uwsgi-django
    image: uwsgi-django
    env_file:
      - .env
    networks:
      - db_transcendence
      - web_transcendence
      - blockchain_transcendence
    ports:
      # - "8086:8000" # socket
      - "8096:8001" # http
      - "${DJANGO_PORT}:8000"
    depends_on:
      - postgres
    restart: unless-stopped
    init: true
    volumes:
      # - logs_volume:/src/logs
      - '${VOLUME_PATH}/log_django_vol:/src/logs'
  #     - ${VOLUME_PATH}/ft_django/code:/code
  #     - ${VOLUME_PATH}/ft_django/static:/static/
  #     - ${VOLUME_PATH}/ft_django/uwsgi:/etc/uwsgi
  #     - ${VOLUME_PATH}:/container_output

  postgres:
    container_name: postgres
    build: ./postgres
    image: postgres
    env_file:
      - .env
    environment:
      # 冗長だが明示的に指定。　.envを上書きしたい場合に活用する
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST_AUTH_METHOD=${POSTGRES_HOST_AUTH_METHOD}
      - POSTGRES_LOCAL_AUTH_METHOD=${POSTGRES_LOCAL_AUTH_METHOD}
    volumes:
      - ${VOLUME_PATH}/postgres:/var/lib/postgresql/data
      - ${VOLUME_PATH}:/container_output
    networks:
      - db_transcendence
    ports:
      - "${POSTGRES_PORT}:5432" 
    restart: unless-stopped
    init: true

  pgadmin:
    container_name: pgadmin
    build: ./pgadmin
    image: pgadmin
    env_file:
      - .env
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "${PGADMIN_PORT}:80"
    volumes:
      - ${VOLUME_PATH}/pgadmin:/var/lib/pgadmin
    networks:
      - db_transcendence
      - web_transcendence
    restart: unless-stopped
    init: true
