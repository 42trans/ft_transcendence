version: "3.7"
# docker/srcs/docker-compose.yml
volumes:
  postgres_vol:
    driver_opts:
      type: none
      device: ${VOLUME_PATH}/postgres
      o: bind
  pgadmin_vol:
    driver_opts:
      type: none
      device: ${VOLUME_PATH}/pgadmin
      o: bind
  django_vol:
    driver_opts:
      type: none
      device: ${VOLUME_PATH}/django
      o: bind
  elk_vol:
    driver_opts:
      type: none
      device: ${VOLUME_PATH}/elk
      o: bind

networks:
  web_transcendence:
    driver: bridge
    name: web_transcendence
  db_transcendence:
    driver: bridge
    name: db_transcendence
  elastic_transcendence:
    driver: bridge
    name: elastic_transcendence

services:
  nginx:
    container_name: nginx
    build: ./nginx
    image: nginx
    env_file:
      - .env
    ports:
      - "${NGINX_SSL_PORT}:443"
      - "${NGINX_PORT}:8085"
    environment:
      - SERVER_NAME=${SERVER_NAME}
    volumes:
      - ${VOLUME_PATH}/nginx/static:/static
      - ${SSL_CERT_PATH}:/etc/nginx/ssl/nginx.crt
      - ${SSL_KEY_PATH}:/etc/nginx/ssl/nginx.key
      - ${VOLUME_PATH}:/container_output
    networks:
      - web_transcendence
    restart: unless-stopped
    # depends_on:
    #   - pgadmin
    #   - ft_django
    init: true

  prometheus:
    container_name: prometheus
    build: ./prometheus
    image: prometheus
    env_file:
      - .env
    ports:
      - "9090:9090"
    networks:
      - web_transcendence
      # - db_transcendence
    #   - elastic_transcendence
    volumes:
      - ${VOLUME_PATH}/prometheus:/prometheus

  grafana:
    image: grafana/grafana-enterprise
    container_name: grafana
    # restart: unless-stopped
    ports:
     - '3000:3000'
    volumes:
      - ${VOLUME_PATH}/grafana:/var/lib/grafana
    env_file:
      - .env
    environment:
     - GF_SERVER_ROOT_URL=http://my.grafana.server/
     - GF_INSTALL_PLUGINS=grafana-clock-panel
     - GF_LOG_LEVEL=debug
    networks:
      - web_transcendence
