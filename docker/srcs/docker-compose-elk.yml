version: "3.7"
# docker/srcs/docker-compose-elk.yml
volumes:
  certs:
    driver: local
  esdata:
    driver: local
  kibanadata:
    driver: local

services:
  elasticsearch:
    build: 
      context: ./elasticsearch
      dockerfile: Dockerfile
      args:
          - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
          - KIBANA_PASSWORD=${KIBANA_PASSWORD}
    volumes:
      # - ./docker/srcs/elasticsearch/certs:/usr/share/elasticsearch/config/certs
      - certs:/usr/share/elasticsearch/config/certs
      - esdata:/usr/share/elasticsearch/data
      - ${VOLUME_PATH}:/container_output
    networks:
      - elastic_transcendence
    ports:
      - ${ES_PORT}:9200
    env_file:
      - .env
    environment:
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
      - KIBANA_PASSWORD=${KIBANA_PASSWORD}
      - cluster.name=${CLUSTER_NAME}
      - ELASTICSEARCH_PASSWORD=${ELASTIC_PASSWORD}
      - xpack.license.self_generated.type=${LICENSE}
    mem_limit: ${MEM_LIMIT}
    ulimits:
      memlock:
        soft: -1
        hard: -1
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s --cacert config/certs/ca/ca.crt https://localhost:9200 | grep -q 'missing authentication credentials'",
        ]
      interval: 10s
      timeout: 10s
      retries: 120


  kibana:
    build: 
      context: ./kibana
      dockerfile: Dockerfile
      args:
        - ELASTICSEARCH_USERNAME=${ELASTICSEARCH_USERNAME}
        - ELASTICSEARCH_PASSWORD=${ELASTICSEARCH_PASSWORD}
    image: kibana
    depends_on:
      elasticsearch:
        condition: service_healthy
    volumes:
      # - ./docker/srcs/elasticsearch/certs:/usr/share/kibana/config/certs
      - certs:/usr/share/kibana/config/certs
      - kibanadata:/usr/share/kibana/data
      - ./kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml
      - ${VOLUME_PATH}:/container_output
    ports:
      - ${KIBANA_PORT}:5601
    env_file:
      - .env
    networks:
      - elastic_transcendence
    environment:
      - ELASTICSEARCH_USERNAME=${ELASTICSEARCH_USERNAME}
      - ELASTICSEARCH_PASSWORD=${ELASTICSEARCH_PASSWORD}
    mem_limit: ${MEM_LIMIT}
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s -I http://localhost:5601 | grep -q 'HTTP/1.1 302 Found'",
        ]
      interval: 10s
      timeout: 10s
      retries: 120

  # logstash:
  #   build: ./logstash
  #   image: logstash
  #   volumes:
  #     - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml
  #     - ./logstash/pipeline:/usr/share/logstash/pipeline
  #   ports:
  #     - "5044:5044"
  #   env_file:
  #     - .env
  #   networks:
  #     - elastic_transcendence
